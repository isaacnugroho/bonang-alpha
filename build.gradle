import org.gradle.api.plugins.internal.DefaultJavaPluginExtension

plugins {
  id "com.diffplug.eclipse.apt" version "3.22.0"
  id "com.github.johnrengelman.shadow" version "6.0.0"
  id "application"
  id "com.github.hierynomus.license" version"0.15.0"
}

version "0.1"
group "io.zenkoderz.bonang"

repositories {
  mavenCentral()
  jcenter()
}

configurations {
  // for dependencies that are needed for development only
  developmentOnly
}

dependencies {
  annotationProcessor 'org.projectlombok:lombok:1.18.6'

  annotationProcessor(platform("io.micronaut:micronaut-bom:$micronautVersion"))
  annotationProcessor("io.micronaut:micronaut-inject-java")
  annotationProcessor("io.micronaut:micronaut-validation")
  implementation(platform("io.micronaut:micronaut-bom:$micronautVersion"))
  implementation("io.micronaut:micronaut-inject")
  implementation("io.micronaut:micronaut-validation")
  implementation("io.micronaut:micronaut-runtime")
  implementation("io.micronaut:micronaut-http-server-netty")
  implementation("io.micronaut:micronaut-http-client")
  implementation("io.micronaut.reactor:micronaut-reactor")
  implementation("javax.annotation:javax.annotation-api")

  runtimeOnly("ch.qos.logback:logback-classic")
  testAnnotationProcessor(enforcedPlatform("io.micronaut:micronaut-bom:$micronautVersion"))
  testAnnotationProcessor("io.micronaut:micronaut-inject-java")
  testImplementation(enforcedPlatform("io.micronaut:micronaut-bom:$micronautVersion"))
  testImplementation("org.junit.jupiter:junit-jupiter-api")
  testImplementation("io.micronaut.test:micronaut-test-junit5")
  testImplementation("org.apache.commons:commons-lang3:3.11")
  testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine")

  compileOnly 'org.projectlombok:lombok:1.18.6'
//  implementation("io.scalecube:scalecube-commons:1.0.7")
//  implementation("io.scalecube:scalecube-services:2.10.5")
//  implementation("io.scalecube:scalecube-services-transport-rsocket:2.10.5")
//  implementation("io.scalecube:scalecube-services-transport-jackson:2.10.5")
//  implementation("io.scalecube:scalecube-services-transport-protostuff:2.10.5")
//  implementation("io.scalecube:scalecube-services-discovery:2.10.5")

}

test.classpath += configurations.developmentOnly

mainClassName = "io.zenkoderz.bonang.Application"

// use JUnit 5 platform
test {
  useJUnitPlatform()
}

java {
  sourceCompatibility = JavaVersion.toVersion('11')
  targetCompatibility = JavaVersion.toVersion('11')
}

tasks.withType(JavaCompile) {
  options.encoding = "UTF-8"
  options.compilerArgs.addAll([
      '-parameters',
      // enables incremental compilation
      '-Amicronaut.processing.incremental=true',
      '-Amicronaut.processing.annotations=io.zenkoderz.bonang.*',
      "-Amicronaut.processing.group=$project.group",
      "-Amicronaut.processing.module=$project.name",
  ])
}

shadowJar {
  mergeServiceFiles()
}

license {
  header rootProject.file('./config/HEADER')
  mapping("java", "SLASHSTAR_STYLE")
  strictCheck true
  skipExistingHeaders true
  ext.year = Calendar.getInstance().get(Calendar.YEAR)
}

tasks.withType(JavaExec) {
  classpath += configurations.developmentOnly
  jvmArgs('-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')
  if (gradle.startParameter.continuous) {
    systemProperties(
        'micronaut.io.watch.restart':'true',
        'micronaut.io.watch.enabled':'true',
        "micronaut.io.watch.paths":"src/main"
    )
  }
}



